version: '1.0'

services:
  node:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: dependencies
    env_file:
      - .env
    image: ${PROJECT_NAME}-node
    container_name: ${PROJECT_NAME}-node-${NODE_ENV}
    command: dumb-init npm run start:debug
    environment:
      WAIT_HOSTS: ${PROJECT_NAME}-postgres-${NODE_ENV}:5432
    ports:
      - ${PORT}:${PORT}
    volumes:
      - ./:/spotify-api
      - /spotify-api/node_modules
    logging:
      driver: json-file
      options:
        max-size: 20m
        max-file: 5
    depends_on:
      - postgres
      - redis
    networks:
      - spotify-services

  postgres:
    image: postgres:16.4-alpine3.19
    container_name: ${PROJECT_NAME}-postgres-${NODE_ENV}
    environment:
      TZ: UTC
      PGTZ: UTC
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    logging:
      driver: json-file
      options:
        max-size: 20m
        max-file: 5
    command: postgres -p ${POSTGRES_PORT} -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all -c max_connections=200
    restart: always
    networks:
      - spotify-services

  redis:
    image: redis:7.4.0-alpine3.20
    container_name: ${PROJECT_NAME}-redis-${NODE_ENV}
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    restart: always
    logging:
      driver: json-file
      options:
        max-size: 20m
        max-file: 5
    networks:
      - spotify-services

networks:
  spotify-services:
    name: spotify-services
